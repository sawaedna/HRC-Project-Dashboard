"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "src_component_DistributionPie_js";
exports.ids = ["src_component_DistributionPie_js"];
exports.modules = {

/***/ "./src/component/DistributionPie.js":
/*!******************************************!*\
  !*** ./src/component/DistributionPie.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var chartjs_plugin_datalabels__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! chartjs-plugin-datalabels */ \"chartjs-plugin-datalabels\");\n/* harmony import */ var chartjs_plugin_datalabels__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(chartjs_plugin_datalabels__WEBPACK_IMPORTED_MODULE_2__);\n// src/component/DistributionPie.js\n\n\n\nfunction DistributionPie({ data, filters, type = \"phases\" }) {\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const chartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const isClient = \"undefined\" !== \"undefined\";\n    const Chart = isClient ? window.Chart : null;\n    const buildChart = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        const ctx = canvasRef.current?.getContext(\"2d\");\n        if (!ctx || !isClient || !Chart) return;\n        // دمّر القديم\n        if (chartRef.current) {\n            chartRef.current.destroy();\n            chartRef.current = null;\n        }\n        // تسجيل الإضافة (حتى لو معطّلة هنا لا مشكلة)\n        try {\n            Chart.register((chartjs_plugin_datalabels__WEBPACK_IMPORTED_MODULE_2___default()));\n        } catch (_) {}\n        // 1) فلترة البيانات بفلاتر الواجهة\n        const filtered = (Array.isArray(data) ? data : []).filter((r)=>{\n            const siteMatch = !filters?.site || String(r[\"الموقع\"] || \"\") === String(filters.site);\n            const phaseMatch = !filters?.phase || String(r[\"المرحلة\"] || \"\") === String(filters.phase);\n            const itemMatch = !filters?.item || String(r[\"البند الرئيسي\"] || \"\") === String(filters.item);\n            return siteMatch && phaseMatch && itemMatch;\n        });\n        if (type !== \"phases\" || filtered.length === 0) {\n            // لا نرسم شيء لو مافيش بيانات\n            return;\n        }\n        // 2) تجميع: مرحلة -> مجموعة مواقع فريدة\n        const grouped = filtered.reduce((acc, r)=>{\n            const phase = r[\"المرحلة\"] || \"غير محدد\";\n            const site = r[\"الموقع\"] || \"غير محدد\";\n            if (!acc[phase]) acc[phase] = new Set();\n            acc[phase].add(site);\n            return acc;\n        }, {});\n        const phaseOrder = [\n            \"المرحلة الأولى\",\n            \"المرحلة الثانية\",\n            \"المرحلة الثالثة\",\n            \"المرحلة الرابعة\",\n            \"المرحلة الخامسة\"\n        ];\n        const phases = Object.keys(grouped).sort((a, b)=>{\n            const ia = phaseOrder.indexOf(a);\n            const ib = phaseOrder.indexOf(b);\n            if (ia === -1) return 1;\n            if (ib === -1) return -1;\n            return ia - ib;\n        });\n        // 3) بيانات الحلقتين\n        const innerPhaseLabels = [];\n        const innerPhaseData = [];\n        const outerSiteLabels = [];\n        const outerSiteData = [];\n        const siteToPhase = [];\n        phases.forEach((p)=>{\n            const sites = Array.from(grouped[p]).sort();\n            innerPhaseLabels.push(p);\n            innerPhaseData.push(sites.length || 1);\n            sites.forEach((s)=>{\n                outerSiteLabels.push(s);\n                outerSiteData.push(1);\n                siteToPhase.push(p);\n            });\n        });\n        // 4) ألوان\n        const baseColors = [\n            \"rgba(79,140,255,1)\",\n            \"rgba(139,92,246,1)\",\n            \"rgba(34,197,94,1)\",\n            \"rgba(245,158,11,1)\",\n            \"rgba(239,68,68,1)\",\n            \"rgba(168,85,247,1)\",\n            \"rgba(6,182,212,1)\",\n            \"rgba(251,113,133,1)\"\n        ];\n        const innerColors = phases.map((p, i)=>{\n            const idx = phaseOrder.indexOf(p);\n            return baseColors[idx !== -1 ? idx : i % baseColors.length];\n        });\n        const rgbaWithAlpha = (rgba, a)=>{\n            const m = rgba.match(/(\\d+)/g);\n            if (!m || m.length < 3) return rgba;\n            return `rgba(${m[0]}, ${m[1]}, ${m[2]}, ${a})`;\n        };\n        const outerColors = siteToPhase.map((p)=>{\n            const idx = phases.indexOf(p);\n            const base = innerColors[idx];\n            return rgbaWithAlpha(base, 0.7); // ظلّ أخف للمواقع\n        });\n        // 5) البلجن النهائي: داخلي Tangent / خارجي Radial + Fallback\n        const RobustLabels = {\n            id: \"robustLabels\",\n            afterDatasetsDraw (chart) {\n                const ctx2 = chart.ctx;\n                // --- مماسي (Tangent) على القوس (للمراحل) ---\n                const drawTangent = (arc, text, style = {})=>{\n                    if (!arc || !text) return;\n                    const { startAngle, endAngle, innerRadius, outerRadius, x, y, circumference } = arc;\n                    if (circumference <= 0) return;\n                    const mid = (startAngle + endAngle) / 2;\n                    const r = (innerRadius + outerRadius) / 2;\n                    const tx = x + Math.cos(mid) * r;\n                    const ty = y + Math.sin(mid) * r;\n                    let rot = mid - Math.PI / 2;\n                    if (rot > Math.PI / 2 && rot < 3 * Math.PI / 2) rot += Math.PI;\n                    ctx2.save();\n                    ctx2.translate(tx, ty);\n                    ctx2.rotate(rot);\n                    ctx2.textAlign = \"center\";\n                    ctx2.textBaseline = \"middle\";\n                    const size = style.size || 12;\n                    const weight = style.weight || \"bold\";\n                    const color = style.color || \"#fff\";\n                    ctx2.font = `${weight} ${size}px Cairo`;\n                    ctx2.lineWidth = 3;\n                    ctx2.strokeStyle = \"rgba(0,0,0,0.35)\";\n                    ctx2.fillStyle = color;\n                    ctx2.strokeText(text, 0, 0);\n                    ctx2.fillText(text, 0, 0);\n                    ctx2.restore();\n                };\n                // --- شعاعي (Radial) للمواقع + قص + RTL + بديل مماسي ---\n                // === استبدل دالة drawRadialRobust بالكامل بهذه النسخة ===\n                const drawRadialRobust = (arc, rawText, style = {})=>{\n                    if (!arc || !rawText) return;\n                    const { startAngle, endAngle, innerRadius, outerRadius, x, y, circumference } = arc;\n                    if (circumference <= 0) return;\n                    // نكتب للجميع من القاعدة (الداخل) -> الرأس (الخارج) بلا منطق يمين/يسار\n                    const band = outerRadius - innerRadius;\n                    const innerInset = Math.max(10, band * 0.40);\n                    const outerInset = Math.max(2, band * 0.08);\n                    const fontSize = style.size ?? 9;\n                    const startPad = Math.max(2, fontSize * 0.2);\n                    const mid = (startAngle + endAngle) / 2;\n                    const startR = innerRadius + innerInset + startPad;\n                    const endR = outerRadius - outerInset;\n                    const available = Math.max(6, endR - startR);\n                    const ctx2 = chart.ctx;\n                    ctx2.save();\n                    // قصّ المثلث حتى لا يتداخل النص مع القطاعات المجاورة\n                    const eps = 1;\n                    ctx2.beginPath();\n                    ctx2.moveTo(x + Math.cos(startAngle) * (innerRadius + eps), y + Math.sin(startAngle) * (innerRadius + eps));\n                    ctx2.arc(x, y, outerRadius - eps, startAngle, endAngle);\n                    ctx2.lineTo(x + Math.cos(endAngle) * (innerRadius + eps), y + Math.sin(endAngle) * (innerRadius + eps));\n                    ctx2.arc(x, y, innerRadius + eps, endAngle, startAngle, true);\n                    ctx2.closePath();\n                    ctx2.clip();\n                    // اجعل الاتجاه على نصف القطر نفسه\n                    ctx2.translate(x, y);\n                    ctx2.rotate(mid);\n                    // إعداد الخط\n                    const size = style.size ?? 11;\n                    const weight = style.weight ?? \"normal\";\n                    const color = style.color ?? \"#fff\";\n                    ctx2.font = `${weight} ${size}px Cairo`;\n                    ctx2.textAlign = \"left\";\n                    ctx2.textBaseline = \"middle\";\n                    ctx2.fillStyle = color;\n                    ctx2.strokeStyle = \"rgba(0,0,0,0.35)\";\n                    ctx2.lineWidth = 3;\n                    ctx2.direction = \"rtl\";\n                    // قصّ ذكي مع \"…\" لضمان الظهور دائمًا (بدون أي fallback متغير)\n                    let text = (rawText || \"\").trim();\n                    if (!text) {\n                        ctx2.restore();\n                        return;\n                    }\n                    // قلّم حتى يلائم الطول المتاح\n                    while(text.length > 2 && ctx2.measureText(text + \"…\").width > available){\n                        text = text.slice(0, -1);\n                    }\n                    if (ctx2.measureText(text).width > available) {\n                        text = \"…\";\n                    } else if (text.length < (rawText || \"\").trim().length) {\n                        text += \"…\";\n                    }\n                    // ابدأ من القاعدة واكتب للخارج\n                    ctx2.translate(startR, 0);\n                    ctx2.strokeText(text, 0, 0);\n                    ctx2.fillText(text, 0, 0);\n                    ctx2.restore();\n                };\n                // ارسم: داخلي = Tangent\n                const metaInner = chart.getDatasetMeta(0);\n                metaInner.data.forEach((arc, i)=>{\n                    const label = (innerPhaseLabels[i] || \"\").trim();\n                    if (!label) return;\n                    drawTangent(arc, label, {\n                        size: 13,\n                        weight: \"bold\",\n                        color: \"#fff\"\n                    });\n                });\n                // ارسم: خارجي = RadialRobust (مع بديل)\n                const metaOuter = chart.getDatasetMeta(1);\n                metaOuter.data.forEach((arc, i)=>{\n                    const raw = (outerSiteLabels[i] || \"\").trim();\n                    if (!raw) return;\n                    drawRadialRobust(arc, raw, {\n                        size: 11,\n                        weight: \"normal\",\n                        color: \"#fff\"\n                    });\n                });\n            }\n        };\n        // 6) إعداد التشارت\n        const config = {\n            type: \"doughnut\",\n            data: {\n                labels: phases,\n                datasets: [\n                    {\n                        label: \"المراحل\",\n                        data: innerPhaseData,\n                        backgroundColor: innerColors,\n                        borderColor: \"#ffffff\",\n                        borderWidth: 2,\n                        weight: 1\n                    },\n                    {\n                        label: \"المواقع\",\n                        data: outerSiteData,\n                        backgroundColor: outerColors,\n                        borderColor: \"#fcfcfcff\",\n                        borderWidth: 2,\n                        weight: 2\n                    }\n                ]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                cutout: \"0%\",\n                plugins: {\n                    legend: {\n                        position: \"right\",\n                        labels: {\n                            font: {\n                                size: 11,\n                                family: \"Cairo\"\n                            },\n                            padding: 12,\n                            // ليجند الحلقة الداخلية فقط (المراحل)\n                            generateLabels: (chart)=>{\n                                const data = chart.data;\n                                if (!data.labels.length || !data.datasets.length) return [];\n                                const { labels: { pointStyle } } = chart.legend.options;\n                                const meta = chart.getDatasetMeta(0);\n                                return data.labels.map((lbl, i)=>({\n                                        text: lbl,\n                                        fillStyle: meta.controller.getStyle(i).backgroundColor,\n                                        strokeStyle: meta.controller.getStyle(i).borderColor,\n                                        lineWidth: meta.controller.getStyle(i).borderWidth,\n                                        pointStyle,\n                                        hidden: !chart.isDatasetVisible(0),\n                                        index: i\n                                    }));\n                            }\n                        }\n                    },\n                    tooltip: {\n                        callbacks: {\n                            label: (ctxTip)=>{\n                                const ds = ctxTip.datasetIndex;\n                                const i = ctxTip.dataIndex;\n                                if (ds === 0) {\n                                    return ctxTip.label || \"\";\n                                }\n                                const site = outerSiteLabels[i];\n                                const phase = siteToPhase[i];\n                                return `${phase} - ${site}`;\n                            }\n                        }\n                    },\n                    datalabels: {\n                        display: false\n                    }\n                }\n            },\n            plugins: [\n                RobustLabels\n            ]\n        };\n        chartRef.current = new Chart(ctx, config);\n    }, [\n        Chart,\n        data,\n        filters,\n        isClient,\n        type\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        buildChart();\n        return ()=>{\n            if (chartRef.current) {\n                chartRef.current.destroy();\n                chartRef.current = null;\n            }\n        };\n    }, [\n        buildChart\n    ]);\n    const title = type === \"phases\" ? \"توزيع المراحل والمواقع\" : \"توزيع البنود الرئيسية\";\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"distribution-pie-panel\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"dashboard-panel-header\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                    children: title\n                }, void 0, false, {\n                    fileName: \"D:\\\\00_Main_Projects\\\\HRC_Project\\\\00_HRC_Project_Main\\\\src\\\\component\\\\DistributionPie.js\",\n                    lineNumber: 332,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\00_Main_Projects\\\\HRC_Project\\\\00_HRC_Project_Main\\\\src\\\\component\\\\DistributionPie.js\",\n                lineNumber: 331,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    flex: 1,\n                    position: \"relative\",\n                    minHeight: \"200px\"\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                    ref: canvasRef,\n                    className: \"pie-canvas\"\n                }, void 0, false, {\n                    fileName: \"D:\\\\00_Main_Projects\\\\HRC_Project\\\\00_HRC_Project_Main\\\\src\\\\component\\\\DistributionPie.js\",\n                    lineNumber: 335,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\00_Main_Projects\\\\HRC_Project\\\\00_HRC_Project_Main\\\\src\\\\component\\\\DistributionPie.js\",\n                lineNumber: 334,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\00_Main_Projects\\\\HRC_Project\\\\00_HRC_Project_Main\\\\src\\\\component\\\\DistributionPie.js\",\n        lineNumber: 330,\n        columnNumber: 5\n    }, this);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DistributionPie);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/component/DistributionPie.js\n");

/***/ })

};
;